# nginx config for serving react spa and proxying api requests

server {
    # listen on port 8080 - non-root users can't bind to ports below 1024
    listen 8080;
    server_name _;
    
    # serve files from here
    root /usr/share/nginx/html;
    index index.html;

    # gzip compression - makes files smaller for faster loading
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json;

    # security headers - prevent common attacks
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # health check endpoint for kubernetes liveness/readiness probes
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # proxy api requests to backend
    # for local testing with docker-compose
    # in k8s, ingress controller handles this routing before reaching nginx
    location /api {
        proxy_pass http://backend-service.backend.svc.cluster.local:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # spa routing - serve index.html for all routes
    # react router handles routing in the browser, not on the server
    location / {
        try_files $uri $uri/ /index.html;
    }

    # cache static assets aggressively
    # vite adds content hashes to filenames (app.abc123.js) so safe to cache forever
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}